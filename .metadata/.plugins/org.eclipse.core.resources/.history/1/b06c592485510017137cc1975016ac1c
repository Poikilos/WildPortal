package me.expertmm.WildPortal;

import java.io.File;
//import java.io.FileOutputStream;
import java.io.IOException;
//import java.io.InputStream;
//import java.io.OutputStream;

import org.bukkit.Location;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;

public class WildPortalData {
	
	private File dataFolder;
	public File playersFile;
	public FileConfiguration players;
	public File portalsFile;
	public FileConfiguration portals;
	
	public WildPortalData(File thisDataFolder) {
		this.dataFolder=thisDataFolder;
		try {
			init();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	    load();
	}
	private void init() throws Exception {
		playersFile = new File(this.dataFolder, "players.yml");
		
		if (!playersFile.exists()) {
			playersFile.getParentFile().mkdirs();
	        //copy(getResource("groups.yml"), playersFile);
	    }
	    players = new YamlConfiguration();
		portalsFile = new File(this.dataFolder, "portals.yml");
		if (!portalsFile.exists()) {
			portalsFile.getParentFile().mkdirs();
	        //copy(getResource("groups.yml"), playersFile);
	    }
	    portals = new YamlConfiguration();
	}
	public void load() {
		try {
	        players.load(playersFile);
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
		try {
	        portals.load(portalsFile);
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	}
	public Location getPlayerReturnLocation(String playerName) {
		return (Location)players.get("Players" + "." + playerName + "." + "returnLocation");
	}
	public void setPlayerReturnLocation(String playerName, Location returnLocation) {
		//NOTE: this is a cross-world configuration--player can only have one home on server.
		players.set("Players" + "." + playerName + "." + "returnLocation", returnLocation);
		save();
	}
	public IRect getPortalDestination(String worldName, Location location) {
		IRect result=null; //new IRect(0, 0, 0, 0);
		if (portals.contains("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect")) {
			int X = portals.getInt("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "X");
			int Y = portals.getInt("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "Y");
			int Width = portals.getInt("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "Width");
			int Height = portals.getInt("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "Height");
			result = new IRect(X,Y, Width, Height);
		}
		return result;
	}
	public void setPortalDestination(String worldName, Location location, IRect rect) {
		portals.set("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "X", rect.X);
		portals.set("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "Y", rect.Y);
		portals.set("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "Width", rect.Width);
		portals.set("Portals" + "." + WildPortalPortal.getIDFromLocation(location) + "." + "destinationRect" + "." + "Height", rect.Height);
		save();
	}
	public void save() {
	    try {
	    	players.save(playersFile);
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	}
}
